1000 EXTEND
1050    ! UPTIME --  UTILITY TO DISPLAY CURRENT SYSTEM UPTIME &
        !          AND LAST BOOT TIME
1060    ! WRITTEN BY DAVID MOISAN
1070    ! VERSION 1.0.0
1080    ! 01-MAY-21
5000 ! CCL AND SWITCH PROCESSING
5005    ! OPTION FLAGS &
        ! 1% = SHOW BRIEF UPTIME REPORT -- SINGLE-LINE (DEFAULT) &
        ! 2% = SHOW TIME OF BOOT &
        ! 4% = FULL REPORT &
        ! 8% = DEBUG OUTPUT
5010 OP%=4% ! DEFAULT OPTION IS FULL REPORT IF NOT RUN IN CCL
5020 CC$=SYS(CHR$(7%)) ! GET CCL STRING
5060 IF LEFT(CC$,6)<>"UPTIME" THEN 10020 ! IF NOT RUN FROM CCL OR CCL NOT VALID,
 SKIP
5070 OP%=1% ! IF PROGRAM IS RUN FROM CCL, THE DEFAULT OPTION IS /SHORT
5090 ! CHECK OPTIONS AND SET FLAGS.
5100 IF INSTR(0,CC$,"/SHORT")<>0% THEN OP%=1%
5110 IF INSTR(0,CC$,"/BOOT")<>0% THEN OP%=2%
5120 IF INSTR(0,CC$,"/FULL")<>0% THEN OP%=4%
5130 IF INSTR(0,CC$,"/DEBUG")<>0% THEN OP%=OP% OR 8%
5140 IF INSTR(0,CC$,"/HELP")<>0% THEN GOSUB 16000 \ GOTO 32767 ! DISPLAY HELP TE
XT AND EXIT
5200 IF OP% AND 8% THEN PRINT "CCL:";CC$
10000 ! MAIN CODE
10020 J%=PEEK(36%)/1000%+2%
10030 J2%=(PEEK(512%)/1000% <> PEEK(36%)/1000%)
10040 J2%=635%+((J%/4%*4%)=J%) IF J2%
10050 T=((PEEK(512%)-PEEK(36%)-J2%)*1440.+PEEK(38%)-PEEK(514%))*60.+60.-(PEEK(51
6%) AND 255%)
10070 ! &
        ! PRINT THE SYSTEM HEADER INCLUDING THE CURRENT DATE AND &
        ! TIME (USING MINUTES TILL MIDNIGHT - SECONDS UNTIL NEXT MINUTE) &
        ! AND LENGTH OF TIME THE SYSTEM'S BEEN UP. &
        ! CHECK FOR CHANGE OF YEAR, ADJUST FOR LEAPYEAR. &
        ! NOTE: 635 (636 IF START DATE WAS A LEAPYEAR) IS NOT A TYPO: &
        ! E.G., 31-DEC-78 -> 01-JAN-79 &
        !     DATE$(8365) -> DATE$(9001) --> 9001-8365=635+1 &
        ! PEEK(N)       CONTENTS &
        ! 36            IDATE = DATE SYSTEM LAST STARTED &
        ! 38            ITIME = TIME SYSTEM LAST STARTED &
        ! 512           DATE = CURRENT DATE &
        ! 514           TIME = CURRENT TIME &
        ! 516 (BYTE)    TIMSEC = SECONDS TO NEXT MINUTE &

10200 T1=INT(T/86400) ! T1 = DAYS
10205 T2=FNMOD(T,86400) ! T2 = DAY FRACTION
10210 T3=INT(T2/3600) ! T3 = HOURS
10215 T4=FNMOD(T2,3600) ! T4 = HOURS FRACTION
10220 T5=INT(T4/60) ! T5 = MINUTES
10230 T6=FNMOD(T4,60) ! T6= SECONDS
10300 S$=S$+MID(NUM$(T1),2,LEN(NUM$(T1))-2)+" day(s), "
10310 S$=S$+FNLZR$(T3)+":"+FNLZR$(T5)+":"+FNLZR$(T6)
10490 IF OP% AND 8% THEN PRINT "T,T1,T2,T3,T4,T5,T6=";T,T1,T2,T3,T4,T5,T6
12000 IF (OP% AND 4%) THEN PRINT CVT$$(RIGHT(SYS(CHR$(6%)+CHR$(9%)+CHR$(0%)),3%)
,4%)
12010 IF (OP% AND 1%) OR (OP% AND 4%) THEN &
      PRINT "System uptime    : ";S$
12020 IF (OP% AND 2%) OR (OP% AND 4%) THEN &
      PRINT "System started at: ";DATE$(PEEK(36%));" ";TIME$(PEEK(38%))
13990 GOTO 32767
14990 ! FNMOD(A,B) = CALCULATES THE MODULUS OF A AND B
15000 DEF FNMOD(A,B)=A-(INT(A/B)*B)
15190   ! FNLZR$(A%)    TAKES AN INTEGER VALUE A% AND RETURNS IT AS S &
        !               A STRING WITH LEADING ZEROS. &
        !               INTENDED FOR DISPLAYING TIME VALUES
15200 DEF FNLZR$(A)
15210 N1$=NUM$(A)
15220 N$=MID(N1$,2,LEN(N1$)-2)
15250 IF A<10 THEN N$="0"+N$ ! INSERT AN "0" FOR SINGLE-DIGIT
15480 FNLZR$=N$
15490 FNEND
15990 ! HELP TEXT
16000 PRINT "UPTIME Options: "
16010 PRINT
16020 PRINT "/SHORT -- Prints brief uptime message without banner"
16030 PRINT "/BOOT  -- Prints time of current boot"
16040 PRINT "/FULL  -- Prints full uptime report with banner"
16050 PRINT "/DEBUG -- Prints debugging messages"
16060 PRINT
16070 PRINT "If UPTIME is invoked outside CCL (RUN$UPTIME), the full report is p
rinted."
16080 PRINT "UPTIME in CCL (UP-TIME) will default to the short (/SHORT) report."
16090 PRINT
16200 RETURN
32767 END

